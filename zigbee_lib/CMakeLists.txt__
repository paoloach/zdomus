cmake_minimum_required(VERSION 3.3)
project(zigbee_lib)

set (GMOCK_DIR ${CMAKE_BINARY_DIR}/gtest-src/googlemock)
set (GTEST_DIR /${CMAKE_BINARY_DIR}/gtest-src/googletest)
set (GMOCK_INCLUDE_DIR ${GMOCK_DIR}/include)
set (GTEST_INCLUDE_DIR ${GTEST_DIR}/include)
set (GMOCK_LIB_DIR ${GMOCK_DIR}/lib/.libs)
set (GTEST_LIB_DIR ${GTEST_DIR}/lib/.libs)
set (GTEST_LIBS gtest gtest_main)
set (GMOCK_LIBS ${GTEST_LIBS} gmock gmock_main)



add_custom_target(debug cmake -DCMAKE_BUILD_TYPE=Debug COMMAND make)
add_custom_target(release cmake -DCMAKE_BUILD_TYPE=Release COMMAND make)
set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -pipe -g3 -O2 -std=c++14")
set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pipe  -g3 -O0  -std=c++14")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")

configure_file(gtest-CMakeLists.txt gtest-download/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" . WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/gtest-download )
execute_process(COMMAND ${CMAKE_COMMAND} --build .  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/gtest-download )

add_subdirectory(${CMAKE_BINARY_DIR}/gtest-src/googlemock  ${CMAKE_BINARY_DIR}/gmock-build EXCLUDE_FROM_ALL )
target_include_directories(gmock INTERFACE  "${CMAKE_BINARY_DIR}/gmock-src/googlemock/include" )

set(CMAKE_BUILD_TYPE Release)
set(INSTALL_PATH /usr/local/zigbee)
set(INSTALL_LIB_DIR ${INSTALL_PATH}/lib)
set(INSTALL_INCLUDE_DIR ${INSTALL_PATH}/include)


file (GLOB zigbee_src  "src/zigbee/*.cpp")
file (GLOB zcl_src  "src/zcl/*.cpp")
file (GLOB attributeTypes_src  "src/zcl/attributeTypes/*.cpp")
file (GLOB clusterTypes_src  "src/zcl/clusterTypes/*.cpp")
file (GLOB usb_src  "src/usb/*.cpp")

file (GLOB zigbeeSrcTest "src/test/*.cpp")

set (USB_HEADER src/usb/USBDevice.h src/usb/usbConfig.h)
file (GLOB zigbee_header  "src/zigbee/*.h")
file (GLOB zigbee_messageStructure_header  "src/zigbee/messageStructure/*.h")
file (GLOB zcl_header  "src/zcl/*.h")
file (GLOB zcl_exceptions  "src/zcl/exceptions/*.h")
file (GLOB zcl_CmdParams_header  "src/zcl/CmdParams/*.h")
file (GLOB attributeTypes_header  "src/zcl/attributeTypes/*.h")
file (GLOB clusterTypes_header  "src/zcl/clusterTypes/*.h")

include_directories( /usr/include/libusb-1.0 . ./src ${GMOCK_INCLUDE_DIR} ${GTEST_INCLUDE_DIR})
set(SOURCE_FILES  ${zigbee_src} ${zcl_src} ${attributeTypes_src} ${clusterTypes_src} ${usb_src}  zcl/cluster.cpp)

add_library(zigbeeLib SHARED  ${SOURCE_FILES} )
add_executable(zigbeeLibTest src/test/main.cpp  ${zigbeeSrcTest} )

target_link_libraries(zigbeeLib usb-1.0)

set_property(TARGET zigbeeLib PROPERTY RUNTIME_OUTPUT_DIRECTORY ./build)
set_target_properties(zigbeeLib PROPERTIES PUBLIC_HEADER "${zigbee_header}" )

target_link_libraries(zigbeeLibTest ${GMOCK_LIBS} pthread)

INSTALL(TARGETS zigbeeLib  LIBRARY DESTINATION  ${INSTALL_LIB_DIR} )
INSTALL(FILES ${zigbee_header}  DESTINATION ${INSTALL_INCLUDE_DIR}/zigbee )
INSTALL(FILES ${zcl_header}  DESTINATION ${INSTALL_INCLUDE_DIR}/zcl )
INSTALL(FILES ${zcl_exceptions}  DESTINATION ${INSTALL_INCLUDE_DIR}/zcl/exceptions )
INSTALL(FILES ${zcl_CmdParams_header}  DESTINATION ${INSTALL_INCLUDE_DIR}/zcl/CmdParams )
INSTALL(FILES ${attributeTypes_header}  DESTINATION ${INSTALL_INCLUDE_DIR}/zcl/attributeTypes )
INSTALL(FILES ${clusterTypes_header}  DESTINATION ${INSTALL_INCLUDE_DIR}/zcl/clusterTypes )
INSTALL(FILES ${zigbee_messageStructure_header}  DESTINATION ${INSTALL_INCLUDE_DIR}/zigbee/messageStructure )
INSTALL(FILES ${USB_HEADER}  DESTINATION ${INSTALL_INCLUDE_DIR}/usb)